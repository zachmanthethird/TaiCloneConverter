Queue<string>files=new();files.Enqueue(Console.ReadLine().Replace('\\','/'));while(files.Count>0){Action<List<string>,string>EachLine;List<(decimal NextTime,int Meter,decimal Timing,bool Kiai,bool FirstBarline)>currentTimingData=new();List<string>notes=new();decimal curBPM=-1,mapSVMultiplier=1m,totalCurSV=1m;int currentMeter=4,previewTime=0;var FindValue=(string key,string line)=>line.StartsWith(key)?line[key.Length..].Trim():null;var currentKiai=false;try{string artist=null,audioFileName=null,bgFileName="",charter=null,difficultyName=null,filePath=files.Dequeue(),folderPath=filePath[..filePath.LastIndexOf('/')],fusVersion="v0.0.7",songTitle=null;var extension=filePath[(filePath.Length-4)..];switch(extension){case".fus":var lineIndex=0;void SVCheck(decimal newSV,decimal oldSV,decimal time){if(newSV!=oldSV){currentTimingData.Add((time,0,newSV,currentKiai,false));totalCurSV=newSV;}}EachLine=(lineData,line)=>{lineIndex++;switch(lineIndex){case 1:if(line!=fusVersion)return;return;case 2:songTitle=line;return;case 3:previewTime=(int)Math.Round(decimal.Parse(line)*1000);return;case 4:folderPath=line;return;case 5:difficultyName=line;return;case 6:charter=line;return;case 7:bgFileName=line;return;case 8:audioFileName=line;return;case 9:artist=line;return;}decimal time=Math.Round(decimal.Parse(lineData[0])*1000);var curSV=decimal.Parse(lineData[1])/mapSVMultiplier;switch(Enum.Parse(typeof(NoteType),lineData[2])){case NoteType.Barline:time=decimal.Parse(lineData[0]);if(currentTimingData.Last()==(time,currentMeter,curBPM,currentKiai,false))currentTimingData.RemoveAt(currentTimingData.Count-1);currentTimingData.Add((time,currentMeter,curBPM,currentKiai,true));SVCheck(curSV,mapSVMultiplier,time);break;case NoteType.Don:case NoteType.Kat:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},1,{(lineData[2]==$"{NoteType.Kat}"?8:0)+(bool.Parse(lineData[3])?4:0)}");break;case NoteType.Roll:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},2,0,L|257:193,1,{decimal.Parse(lineData[3])*curBPM*totalCurSV/0.6m}");break;case NoteType.Spinner:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},8,0,{Math.Round((decimal.Parse(lineData[0])+decimal.Parse(lineData[3]))*1000)}");break;case NoteType.TimingPoint:curBPM=decimal.Parse(lineData[1]);currentKiai=bool.Parse(lineData[3]);totalCurSV=mapSVMultiplier;/*TODO:Meter*/currentTimingData.Add((decimal.Parse(lineData[0]),currentMeter,curBPM,currentKiai,false));break;}};break;case".osu":string section="";var nextBarline=0m;void Barline(decimal curSV){if(totalCurSV>0)notes.Add($"{nextBarline},{totalCurSV},{NoteType.Barline}");nextBarline+=curBPM==0?decimal.MaxValue:60*currentMeter/curBPM;};EachLine=(lineData,line)=>{if($"{line.First()}{line.Last()}"=="[]")section=line[1..(line.Length-1)];else switch(section){case"Difficulty":if(decimal.TryParse(FindValue("SliderMultiplier:",line),out var dValue)){mapSVMultiplier=dValue;totalCurSV=dValue;}break;case"Events":if(FindValue("//",line)=="Background and Video events")bgFileName=null;else bgFileName??=lineData[2][1..(lineData[2].Length-1)];break;case"General":audioFileName??=FindValue("AudioFilename:",line);if(int.TryParse(FindValue("PreviewTime:",line),out var iValue))previewTime=Math.Max(iValue,previewTime);break;case"HitObjects":var time=int.Parse(lineData[2])/1000m;while(currentTimingData.Count>0){var timingData=currentTimingData[0];if(curBPM==-1&&timingData.Meter>0){nextBarline=timingData.NextTime;while(timingData.NextTime>time)timingData.NextTime-=60*timingData.Meter/timingData.Timing;currentTimingData[0]=timingData;}if(timingData.NextTime>time)break;if(timingData.Meter>0){while(nextBarline<timingData.NextTime)Barline(totalCurSV);curBPM=timingData.Timing;currentMeter=timingData.Meter;nextBarline=timingData.NextTime;totalCurSV=mapSVMultiplier;}else totalCurSV=timingData.Timing*mapSVMultiplier;if(timingData.Meter>0||timingData.Kiai!=currentKiai){notes.Add($"{nextBarline},{curBPM},{NoteType.TimingPoint},{timingData.Kiai}");currentKiai=timingData.Kiai;}if(timingData.FirstBarline)Barline(0);currentTimingData.RemoveAt(0);}while(nextBarline<=time)Barline(totalCurSV);notes.Add($"{time},{totalCurSV},"+((8&int.Parse(lineData[3]))>0?$"{NoteType.Spinner},{int.Parse(lineData[5])/1000m-time}":$"{((2&int.Parse(lineData[3]))>0?$"{NoteType.Roll},{(curBPM*totalCurSV==0?decimal.MaxValue:decimal.Parse(lineData[7])*int.Parse(lineData[6])*0.6m/curBPM/totalCurSV)}":(10&int.Parse(lineData[4]))>0?NoteType.Kat:NoteType.Don)},{(4&int.Parse(lineData[4]))>0}"));break;case"Metadata":artist??=FindValue("Artist:",line);charter??=FindValue("Creator:",line);difficultyName??=FindValue("Version:",line);songTitle??=FindValue("Title:",line);break;case"TimingPoints":if(lineData.Count<3)lineData.Add("4");if(lineData.Count<4)lineData.Add("0");if(lineData.Count<5)lineData.Add("0");if(lineData.Count<6)lineData.Add("100");if(lineData.Count<7)lineData.Add("1");if(lineData.Count<8)lineData.Add("0");var sliderVelocity=decimal.Parse(lineData[1]);var uninherited=lineData[6]=="1";currentTimingData.Add((int.Parse(lineData[0])/1000m,uninherited?int.Parse(lineData[2]):0,sliderVelocity==0?decimal.MaxValue:(uninherited?60000:-100)/sliderVelocity,(1&int.Parse(lineData[7]))>0,(8&int.Parse(lineData[7]))>0));break;}};break;default:return;}foreach(var line in File.ReadLines(filePath))if(line.Length>0)EachLine(line.Split(',').ToList(),line);var savePath=folderPath+"/TaiCloneConverter.";if(extension==".fus"){currentTimingData.Sort();List<string>lines=notes.ToList();lines.Insert(0,"[HitObjects]");lines.InsertRange(0,currentTimingData.Select(nextTiming=>{var uninherited=nextTiming.Meter>0;return$"{(int)Math.Round(nextTiming.NextTime*1000)},{(uninherited?60000:-100)/nextTiming.Timing},{nextTiming.Meter},0,0,100,{(uninherited?1:0)},{(nextTiming.Kiai?1:0)+(nextTiming.FirstBarline?0:8)}";}));lines.InsertRange(0,new[]{"osu file format v14","[General]","AudioFilename: "+audioFileName,$"PreviewTime: {previewTime}","Mode: 1","[Metadata]","Title:"+songTitle,"Artist:"+artist,"Creator:"+charter,"Version:"+difficultyName,"[Difficulty]",$"SliderMultiplier:{mapSVMultiplier}","[Events]","//Background and Video events",$"0,0,\"{bgFileName}\"","[TimingPoints]"});File.WriteAllLines(savePath+"osu",lines);}else{notes.InsertRange(0,new[]{fusVersion,songTitle,$"{previewTime/1000f}",folderPath,difficultyName,charter,bgFileName,audioFileName,artist});filePath=savePath+"fus";File.WriteAllLines(filePath,notes);files.Enqueue(filePath);}}catch{}}enum NoteType{TimingPoint,Barline,Don,Kat,Roll,Spinner}