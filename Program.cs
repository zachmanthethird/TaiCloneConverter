Queue<string>files=new();files.Enqueue(Console.ReadLine().Replace('\\','/'));while(files.Count>0){Action<List<string>,string>EachLine;List<(decimal NextTime,bool Inherited,int Meter,decimal Timing,int Kiai,bool FirstBarline)>currentTimingData=new();List<string>notes=new();decimal curBeatLength=-1,curBPM=-1,mapSVMultiplier=1,nextBarline=0,od=0,previousTime=0,totalCurSV=1m;int currentKiai=0,currentMeter=4,previewTime=0;var FindValue=(string key,string line)=>line.StartsWith(key)?line[key.Length..].Trim():null;string filePath=files.Dequeue(),artist=null,audioFileName=null,bgFileName="",charter=null,difficultyName=null,extension=filePath[^4..],folderPath=filePath[..filePath.LastIndexOf('/')],fusVersion="v0.0.9",songTitle=null;switch(extension){case".fus":int lineIndex=0;void SVCheck(decimal curSV,decimal time){if(curSV!=totalCurSV)currentTimingData.Add((time,true,0,curSV,currentKiai,false));totalCurSV=curSV;}EachLine=(lineData,line)=>{lineIndex++;switch(lineIndex){case 1:if(line!=fusVersion)Environment.Exit(0);return;case 2:songTitle=line;return;case 3:int.TryParse(line,out previewTime);return;case 4:decimal.TryParse(line,out od);return;case 5:folderPath=line;return;case 6:difficultyName=line;return;case 7:charter=line;return;case 8:bgFileName=line;return;case 9:audioFileName=line;return;case 10:artist=line;return;}if(lineData.Count<3)return;decimal.TryParse(lineData[0],out var beatTime);decimal.TryParse(lineData[1],out var curSV);curSV/=mapSVMultiplier;Enum.TryParse(typeof(NoteType),lineData[2],out var noteType);decimal length=0,time=previousTime+beatTime*curBeatLength;int finisher=0;var note=$"256,192,{Math.Round(time)},";switch(noteType){case NoteType.Barline:note="";/*TODO:Meter*/if(beatTime==nextBarline){if(beatTime==0){currentTimingData.Remove((previousTime,false,currentMeter,curBPM,currentKiai,true));currentTimingData.Add((previousTime,false,currentMeter,curBPM,currentKiai,false));}nextBarline+=currentMeter;}else{/*TODO:osuDecimalCompatibility*/currentTimingData.Add((time,false,currentMeter,curBPM,currentKiai,false));nextBarline=beatTime+currentMeter;totalCurSV=mapSVMultiplier;}SVCheck(curSV,time);break;case NoteType.Don:case NoteType.Kat:if(lineData.Count>3)int.TryParse(lineData[3],out finisher);note+=$"1,{(lineData[2]==$"{(int)NoteType.Kat}"?8:0)+finisher*4}";break;case NoteType.Roll:if(lineData.Count>3)decimal.TryParse(lineData[3],out length);if(lineData.Count>4)int.TryParse(lineData[4],out finisher);note+=$"2,{finisher*4},L|257:193,1,{length*totalCurSV*100}";break;case NoteType.Spinner:if(lineData.Count>3)decimal.TryParse(lineData[3],out length);note+=$"8,0,{Math.Round(previousTime+(beatTime+length)*curBeatLength)}";break;case NoteType.TimingPoint:note="";curBPM=curSV;curBeatLength=curBPM==0?decimal.MaxValue:(60000/curBPM);currentKiai=int.TryParse(lineData[3],out int iValue)?iValue:0;nextBarline=0;previousTime=beatTime;totalCurSV=mapSVMultiplier;currentTimingData.Add((beatTime,false,currentMeter,curBPM,currentKiai,true));break;}if(note!=""){SVCheck(curSV,time);notes.Add(note);}};break;case".osu":var section="";void Barline(decimal curSV){if(curSV>0)notes.Add($"{nextBarline},{curSV},{(int)NoteType.Barline}");nextBarline+=currentMeter;};EachLine=(lineData,line)=>{if($"{line[0]}{line[^1]}"=="[]")section=line[1..^1];else switch(section){case"Difficulty":if(decimal.TryParse(FindValue("OverallDifficulty:",line),out var dValue))od=dValue;if(decimal.TryParse(FindValue("SliderMultiplier:",line),out dValue)){mapSVMultiplier=dValue;totalCurSV=dValue;}break;case"Events":if(FindValue("//",line)=="Background and Video events")bgFileName=null;else if(lineData.Count>2)bgFileName??=lineData[2].Replace("\"","");break;case"General":audioFileName??=FindValue("AudioFilename:",line);if(int.TryParse(FindValue("PreviewTime:",line),out int iValue))previewTime=Math.Max(iValue,previewTime);break;case"HitObjects":if(lineData.Count<5)break;decimal.TryParse(lineData[2],out var time);while(currentTimingData.Count>0){var timingData=currentTimingData[0];if(curBPM<0&&!timingData.Inherited){while(timingData.NextTime>time){timingData.NextTime-=timingData.Meter*timingData.Timing;Barline(0);}previousTime=timingData.NextTime;}if(timingData.NextTime>time)break;var barlines=curBeatLength==0?decimal.MaxValue:((timingData.NextTime-previousTime)/curBeatLength);while(nextBarline<barlines)Barline(totalCurSV);if(!timingData.Inherited||timingData.Kiai!=currentKiai){nextBarline-=barlines;if(!timingData.Inherited){if(curBPM>=0)nextBarline=0;curBeatLength=timingData.Timing;curBPM=curBeatLength==0?decimal.MaxValue:(60000/curBeatLength);currentMeter=timingData.Meter;totalCurSV=mapSVMultiplier;if(timingData.FirstBarline)Barline(0);}notes.Add($"{timingData.NextTime},{curBPM},{(int)NoteType.TimingPoint},{timingData.Kiai}");currentKiai=timingData.Kiai;previousTime=timingData.NextTime;}if(timingData.Inherited)totalCurSV=timingData.Timing==0?decimal.MaxValue:(-100*mapSVMultiplier/timingData.Timing);currentTimingData.RemoveAt(0);}var beatTime=curBeatLength==0?decimal.MaxValue:((time-previousTime)/curBeatLength);while(nextBarline<=beatTime)Barline(totalCurSV);int.TryParse(lineData[3],out int noteType);var note=$"{beatTime},{totalCurSV},";if((8&noteType)>0){if(lineData.Count>5&&decimal.TryParse(lineData[5],out dValue))note+=$"{(int)NoteType.Spinner},{(curBeatLength==0?decimal.MaxValue:((dValue-time)/curBeatLength))}";}else{int.TryParse(lineData[4],out int finisher);note+=$"{((2&noteType)>0?$"{(int)NoteType.Roll},{(curBPM*totalCurSV!=0&&lineData.Count>7&&decimal.TryParse(lineData[7],out dValue)&&int.TryParse(lineData[6],out iValue)?dValue*iValue/totalCurSV/100:decimal.MaxValue)}":(int)((10&finisher)>0?NoteType.Kat:NoteType.Don))},{((4&finisher)>0?1:0)}";}notes.Add(note);break;case"Metadata":artist??=FindValue("Artist:",line);charter??=FindValue("Creator:",line);difficultyName??=FindValue("Version:",line);songTitle??=FindValue("Title:",line);break;case"TimingPoints":if(lineData.Count<2)break;int effects=lineData.Count>7&&int.TryParse(lineData[7],out iValue)?iValue:0;var inherited=lineData.Count>2&&lineData[6]=="0";currentTimingData.Add((decimal.TryParse(lineData[0],out dValue)?dValue:0,inherited,inherited?0:(int.TryParse(lineData[2],out iValue)?iValue:4),decimal.TryParse(lineData[1],out dValue)?dValue:0,(1&effects)>0?1:0,(8&effects)>0));break;}};break;default:continue;}foreach(var line in File.ReadLines(filePath))if(line.Length>0)EachLine(line.Split(',').ToList(),line);var savePath=folderPath+$"/{artist} - {songTitle} (TaiCloneConverter) [{difficultyName}].";if(extension==".fus"){currentTimingData.Sort();notes.Insert(0,"[HitObjects]");notes.InsertRange(0,currentTimingData.Select(nextTiming=>$"{nextTiming.NextTime},{(nextTiming.Timing==0?(nextTiming.Inherited?decimal.MinValue:decimal.MaxValue):((nextTiming.Inherited?-100:60000)/nextTiming.Timing))},{nextTiming.Meter},0,0,100,{(nextTiming.Inherited?0:1)},{nextTiming.Kiai+(nextTiming.FirstBarline?8:0)}"));notes.InsertRange(0,new[]{"osu file format v14","[General]","AudioFilename: "+audioFileName,$"PreviewTime: {previewTime}","Mode: 1","[Metadata]","Title:"+songTitle,"Artist:"+artist,"Creator:"+charter,"Version:"+difficultyName,"[Difficulty]",$"OverallDifficulty:{od}",$"SliderMultiplier:{mapSVMultiplier}","[Events]","//Background and Video events",$"0,0,\"{bgFileName}\"","[TimingPoints]"});File.WriteAllLines(savePath+"osu",notes);}else{notes.InsertRange(0,new[]{fusVersion,songTitle,$"{previewTime}",$"{od}",folderPath,difficultyName,charter,bgFileName,audioFileName,artist});filePath=savePath+"fus";File.WriteAllLines(filePath,notes);files.Enqueue(filePath);}}enum NoteType{TimingPoint,Barline,Don,Kat,Roll,Spinner}