Queue<string>files=new();files.Enqueue(Console.ReadLine().Replace('\\','/'));while(files.Count>0){Action<List<string>,string>EachLine;List<(decimal NextTime,int Meter,decimal Timing,int Kiai,bool FirstBarline)>currentTimingData=new();List<string>notes=new();decimal curBPM=-1,mapSVMultiplier=1m,totalCurSV=1m;int currentKiai=0,currentMeter=4,previewTime=0;var FindValue=(string key,string line)=>line.StartsWith(key)?line[key.Length..].Trim():null;string filePath=files.Dequeue(),artist=null,audioFileName=null,bgFileName="",charter=null,difficultyName=null,extension=filePath[^4..],folderPath=filePath[..filePath.LastIndexOf('/')],fusVersion="v0.0.8",songTitle=null;switch(extension){case".fus":try{int lineIndex=0;void SVCheck(decimal newSV,decimal oldSV,decimal time){if(newSV!=oldSV){currentTimingData.Add((time,0,newSV,currentKiai,false));totalCurSV=newSV;}}EachLine=(lineData,line)=>{lineIndex++;switch(lineIndex){case 1:if(line!=fusVersion)Environment.Exit(0);return;case 2:songTitle=line;return;case 3:previewTime=(int)Math.Round(decimal.Parse(line)*1000);return;case 4:folderPath=line;return;case 5:difficultyName=line;return;case 6:charter=line;return;case 7:bgFileName=line;return;case 8:audioFileName=line;return;case 9:artist=line;return;}decimal time=Math.Round(decimal.Parse(lineData[0])*1000);var curSV=decimal.Parse(lineData[1])/mapSVMultiplier;switch(Enum.Parse(typeof(NoteType),lineData[2])){case NoteType.Barline:time=decimal.Parse(lineData[0]);if(currentTimingData.Last()==(time,currentMeter,curBPM,currentKiai,false))currentTimingData.RemoveAt(currentTimingData.Count-1);currentTimingData.Add((time,currentMeter,curBPM,currentKiai,true));SVCheck(curSV,mapSVMultiplier,time);break;case NoteType.Don:case NoteType.Kat:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},1,{(lineData[2]==$"{NoteType.Kat}"?8:0)+(bool.Parse(lineData[3])?4:0)}");break;case NoteType.Roll:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},2,0,L|257:193,1,{decimal.Parse(lineData[3])*curBPM*totalCurSV/0.6m}");break;case NoteType.Spinner:SVCheck(curSV,totalCurSV,(time-1)/1000);notes.Add($"256,192,{time},8,0,{Math.Round((decimal.Parse(lineData[0])+decimal.Parse(lineData[3]))*1000)}");break;case NoteType.TimingPoint:curBPM=decimal.Parse(lineData[1]);/*currentKiai=bool.Parse(lineData[3]);*/totalCurSV=mapSVMultiplier;/*TODO:Meter*/currentTimingData.Add((decimal.Parse(lineData[0]),currentMeter,curBPM,currentKiai,false));break;}};}catch{EachLine=(lineData,line)=>{};}break;case".osu":decimal curBeatLength=-1,previousTime=0;int nextBarline=0;var section="";void Barline(decimal curSV){if(curSV>0)notes.Add($"{nextBarline},{curSV},{(int)NoteType.Barline}");nextBarline+=currentMeter;};EachLine=(lineData,line)=>{if($"{line[0]}{line[^1]}"=="[]")section=line[1..^1];else switch(section){case"Difficulty":if(decimal.TryParse(FindValue("SliderMultiplier:",line),out var dValue)){mapSVMultiplier=dValue;totalCurSV=dValue;}break;case"Events":if(FindValue("//",line)=="Background and Video events")bgFileName=null;else if(lineData.Count>2)bgFileName??=lineData[2].Replace("\"","");break;case"General":audioFileName??=FindValue("AudioFilename:",line);if(int.TryParse(FindValue("PreviewTime:",line),out int iValue))previewTime=Math.Max(iValue,previewTime);break;case"HitObjects":if(lineData.Count<5)break;decimal.TryParse(lineData[2],out var time);while(currentTimingData.Count>0){var timingData=currentTimingData[0];if(curBPM==-1&&timingData.Meter>0){while(timingData.NextTime>time){timingData.NextTime-=timingData.Meter*timingData.Timing;Barline(0);}previousTime=timingData.NextTime;}if(timingData.NextTime>time)break;if(timingData.Meter>0||timingData.Kiai!=currentKiai){while(nextBarline<(timingData.NextTime-previousTime)/curBeatLength)Barline(totalCurSV);notes.Add($"{timingData.NextTime},{curBPM},{(int)NoteType.TimingPoint},{timingData.Kiai}");currentKiai=timingData.Kiai;if(curBPM!=-1)nextBarline=0;previousTime=timingData.NextTime;}if(timingData.Meter>0){curBeatLength=timingData.Timing;curBPM=60000/curBeatLength;currentMeter=timingData.Meter;totalCurSV=mapSVMultiplier;if(timingData.FirstBarline)Barline(0);}else totalCurSV=-100/timingData.Timing*mapSVMultiplier;currentTimingData.RemoveAt(0);}var beatTime=(time-previousTime)/curBeatLength;while(nextBarline<=beatTime)Barline(totalCurSV);int.TryParse(lineData[3],out int noteType);var note=$"{beatTime},{totalCurSV},";if((8&noteType)>0){if(lineData.Count<6||!decimal.TryParse(lineData[5],out var endTime))break;note+=$"{(int)NoteType.Spinner},{(endTime-time)/curBeatLength}";}else{int.TryParse(lineData[4],out int finisher);note+=$"{((2&noteType)>0?$"{(int)NoteType.Roll},{(curBPM*totalCurSV!=0&&lineData.Count>7&&decimal.TryParse(lineData[7],out dValue)&&int.TryParse(lineData[6],out iValue)?dValue*iValue/totalCurSV/100:decimal.MaxValue)}":(int)((10&finisher)>0?NoteType.Kat:NoteType.Don))},{((4&finisher)>0?1:0)}";}notes.Add(note);break;case"Metadata":artist??=FindValue("Artist:",line);charter??=FindValue("Creator:",line);difficultyName??=FindValue("Version:",line);songTitle??=FindValue("Title:",line);break;case"TimingPoints":if(lineData.Count<2)break;int effects=lineData.Count>7&&int.TryParse(lineData[7],out iValue)?iValue:0;var uninherited=lineData[6]=="1";currentTimingData.Add((decimal.TryParse(lineData[0],out dValue)?dValue:0,lineData.Count>2&&uninherited?(int.TryParse(lineData[2],out iValue)?iValue:4):0,decimal.TryParse(lineData[1],out dValue)?dValue:0,(1&effects)>0?1:0,(8&effects)>0));break;}};break;default:continue;}try{foreach(var line in File.ReadLines(filePath))if(line.Length>0)EachLine(line.Split(',').ToList(),line);var savePath=folderPath+"/TaiCloneConverter.";if(extension==".fus"){currentTimingData.Sort();List<string>lines=notes.ToList();lines.Insert(0,"[HitObjects]");lines.InsertRange(0,currentTimingData.Select(nextTiming=>{var uninherited=nextTiming.Meter>0;return$"{(int)Math.Round(nextTiming.NextTime*1000)},{(uninherited?60000:-100)/nextTiming.Timing},{nextTiming.Meter},0,0,100,{(uninherited?1:0)},{nextTiming.Kiai+(nextTiming.FirstBarline?0:8)}";}));lines.InsertRange(0,new[]{"osu file format v14","[General]","AudioFilename: "+audioFileName,$"PreviewTime: {previewTime}","Mode: 1","[Metadata]","Title:"+songTitle,"Artist:"+artist,"Creator:"+charter,"Version:"+difficultyName,"[Difficulty]",$"SliderMultiplier:{mapSVMultiplier}","[Events]","//Background and Video events",$"0,0,\"{bgFileName}\"","[TimingPoints]"});File.WriteAllLines(savePath+"osu",lines);}else{notes.InsertRange(0,new[]{fusVersion,songTitle,$"{previewTime/1000f}",folderPath,difficultyName,charter,bgFileName,audioFileName,artist});filePath=savePath+"fus";File.WriteAllLines(filePath,notes);/*files.Enqueue(filePath);*/}}catch{}}enum NoteType{TimingPoint,Barline,Don,Kat,Roll,Spinner}